webpackJsonp([18],{1525:function(t,s,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(s,"__esModule",{value:!0});var a=n(65),x=e(a),l=n(6),d=e(l),r=n(10),o=e(r),c=n(9),p=e(c),i=n(8),h=e(i),u=n(0),E=e(u),F=n(1530),f=e(F),g=n(1529),y=e(g),C=n(1710),j=e(C),m=n(1596),B=e(m),D=n(1711),A=e(D),k=function(t){function s(){return(0,d.default)(this,s),(0,p.default)(this,(s.__proto__||(0,x.default)(s)).apply(this,arguments))}return(0,h.default)(s,t),(0,o.default)(s,[{key:"render",value:function(){return E.default.createElement("div",null,E.default.createElement(f.default,{title:"示例一",content:E.default.createElement(B.default,null),doc:j.default}),(0,y.default)({content:A.default}))}}]),s}(u.Component);s.default=k,t.exports=s.default},1529:function(t,s,n){"use strict";function e(t){return x.default.createElement("div",{className:"markdown-body",dangerouslySetInnerHTML:{__html:t.content}})}Object.defineProperty(s,"__esModule",{value:!0}),s.default=e;var a=n(0),x=function(t){return t&&t.__esModule?t:{default:t}}(a);t.exports=s.default},1530:function(t,s,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(s,"__esModule",{value:!0});var a=n(65),x=e(a),l=n(6),d=e(l),r=n(10),o=e(r),c=n(9),p=e(c),i=n(8),h=e(i),u=n(0),E=e(u),F=n(257),f=n(1529),g=e(f),y=F.Collapse.Panel,C=function(t){function s(){return(0,d.default)(this,s),(0,p.default)(this,(s.__proto__||(0,x.default)(s)).apply(this,arguments))}return(0,h.default)(s,t),(0,o.default)(s,[{key:"render",value:function(){return E.default.createElement(F.Card,{title:this.props.title,style:{overflow:"visible"},className:"example-template"},E.default.createElement(F.Collapse,{bordered:!1,defaultActiveKey:["1"],style:{overflow:"visible"}},E.default.createElement(y,{header:E.default.createElement("a",null,"效果"),key:"1",style:{overflow:"visible"}},E.default.createElement("div",{className:"example-content"},E.default.cloneElement(this.props.content,this.props))),E.default.createElement(y,{header:E.default.createElement("a",null,"代码"),key:"2"},(0,g.default)({content:this.props.doc}))))}}]),s}(u.Component);s.default=C,t.exports=s.default},1596:function(t,s,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(s,"__esModule",{value:!0});for(var a=n(38),x=e(a),l=n(65),d=e(l),r=n(6),o=e(r),c=n(10),p=e(c),i=n(9),h=e(i),u=n(8),E=e(u),F=n(0),f=e(F),g=n(257),y=[],C=0;C<20;C++)y.push({key:C.toString(),title:"content"+C,description:"description of content"+C,disabled:C%3<1});var j=y.filter(function(t){return+t.key%3>1}).map(function(t){return t.key}),m=function(t){function s(){var t,n,e,a;(0,o.default)(this,s);for(var x=arguments.length,l=Array(x),r=0;r<x;r++)l[r]=arguments[r];return n=e=(0,h.default)(this,(t=s.__proto__||(0,d.default)(s)).call.apply(t,[this].concat(l))),e.state={targetKeys:j,selectedKeys:[]},a=n,(0,h.default)(e,a)}return(0,E.default)(s,t),(0,p.default)(s,[{key:"handleChange",value:function(t,s,n){this.setState({targetKeys:t}),console.log("targetKeys: ",j),console.log("direction: ",s),console.log("moveKeys: ",n)}},{key:"handleSelectChange",value:function(t,s){this.setState({selectedKeys:[].concat((0,x.default)(t),(0,x.default)(s))}),console.log("sourceSelectedKeys: ",t),console.log("targetSelectedKeys: ",s)}},{key:"handleScroll",value:function(t,s){console.log("direction:",t),console.log("target:",s.target)}},{key:"render",value:function(){var t=this.state;return f.default.createElement(g.Transfer,{dataSource:y,titles:["Source","Target"],targetKeys:t.targetKeys,selectedKeys:t.selectedKeys,onChange:this.handleChange.bind(this),onSelectChange:this.handleSelectChange.bind(this),onScroll:this.handleScroll.bind(this),render:function(t){return t.title}})}}]),s}(F.Component);s.default=m,t.exports=s.default},1710:function(t,s){t.exports='<pre class="hljs"><span class="hljs-keyword">import</span> React,{Component} <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;react&apos;</span>\n<span class="hljs-keyword">import</span> { Transfer  } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;xr-component&apos;</span>\n\n<span class="hljs-keyword">const</span> mockData = [];\n<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">20</span>; i++) {\n      mockData.push({\n        <span class="hljs-attr">key</span>: i.toString(),\n        <span class="hljs-attr">title</span>: <span class="hljs-string">`content<span class="hljs-subst">${i}</span>`</span>,\n        <span class="hljs-attr">description</span>: <span class="hljs-string">`description of content<span class="hljs-subst">${i}</span>`</span>,\n        <span class="hljs-attr">disabled</span>: i % <span class="hljs-number">3</span> &lt; <span class="hljs-number">1</span>,\n      })\n}\n\n<span class="hljs-keyword">const</span> targetKeys = mockData\n    .filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> +item.key % <span class="hljs-number">3</span> &gt; <span class="hljs-number">1</span>)\n       .map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.key)\n\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Example1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n    state = {\n        targetKeys,\n        <span class="hljs-attr">selectedKeys</span>: [],\n      }\n\n    handleChange(nextTargetKeys, direction, moveKeys){\n        <span class="hljs-keyword">this</span>.setState({ <span class="hljs-attr">targetKeys</span>: nextTargetKeys })\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;targetKeys: &apos;</span>, targetKeys)\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;direction: &apos;</span>, direction)\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;moveKeys: &apos;</span>, moveKeys)\n      }\n\n    handleSelectChange(sourceSelectedKeys, targetSelectedKeys){\n        <span class="hljs-keyword">this</span>.setState({ <span class="hljs-attr">selectedKeys</span>: [...sourceSelectedKeys, ...targetSelectedKeys] })\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;sourceSelectedKeys: &apos;</span>, sourceSelectedKeys)\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;targetSelectedKeys: &apos;</span>, targetSelectedKeys)\n    }\n\n    handleScroll(direction, e){\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;direction:&apos;</span>, direction)\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;target:&apos;</span>, e.target)\n    }\n\n    render() {\n        <span class="hljs-keyword">const</span> state = <span class="hljs-keyword">this</span>.state\n        <span class="hljs-keyword">return</span> (\n              <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Transfer</span>\n                <span class="hljs-attr">dataSource</span>=<span class="hljs-string">{mockData}</span>\n                <span class="hljs-attr">titles</span>=<span class="hljs-string">{[</span>&apos;<span class="hljs-attr">Source</span>&apos;, &apos;<span class="hljs-attr">Target</span>&apos;]}\n                <span class="hljs-attr">targetKeys</span>=<span class="hljs-string">{state.targetKeys}</span>\n                <span class="hljs-attr">selectedKeys</span>=<span class="hljs-string">{state.selectedKeys}</span>\n                <span class="hljs-attr">onChange</span>=<span class="hljs-string">{::this.handleChange}</span>\n                <span class="hljs-attr">onSelectChange</span>=<span class="hljs-string">{::this.handleSelectChange}</span>\n                <span class="hljs-attr">onScroll</span>=<span class="hljs-string">{::this.handleScroll}</span>\n                <span class="hljs-attr">render</span>=<span class="hljs-string">{item</span> =&gt;</span> item.title}\n              /&gt;\n        )    \n    }\n}\n</span></pre>\n'},1711:function(t,s){t.exports='<h1 id="transfer-">Transfer &#x7A7F;&#x68AD;&#x9009;&#x62E9;&#x6846;</h1>\n<p>&#x53CC;&#x680F;&#x7A7F;&#x68AD;&#x9009;&#x62E9;&#x6846;</p>\n<h2 id="-">&#x4F55;&#x65F6;&#x4F7F;&#x7528;</h2>\n<p>&#x7528;&#x76F4;&#x89C2;&#x7684;&#x65B9;&#x5F0F;&#x5728;&#x4E24;&#x680F;&#x4E2D;&#x79FB;&#x52A8;&#x5143;&#x7D20;&#xFF0C;&#x5B8C;&#x6210;&#x9009;&#x62E9;&#x884C;&#x4E3A;&#x3002;</p>\n<p>&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6216;&#x4EE5;&#x4E0A;&#x7684;&#x9009;&#x9879;&#x540E;&#xFF0C;&#x70B9;&#x51FB;&#x5BF9;&#x5E94;&#x7684;&#x65B9;&#x5411;&#x952E;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x9009;&#x4E2D;&#x7684;&#x9009;&#x9879;&#x79FB;&#x52A8;&#x5230;&#x53E6;&#x4E00;&#x680F;&#x3002;\n&#x5176;&#x4E2D;&#xFF0C;&#x5DE6;&#x8FB9;&#x4E00;&#x680F;&#x4E3A; <code>source</code>&#xFF0C;&#x53F3;&#x8FB9;&#x4E00;&#x680F;&#x4E3A; <code>target</code>&#xFF0C;API &#x7684;&#x8BBE;&#x8BA1;&#x4E5F;&#x53CD;&#x5E94;&#x4E86;&#x8FD9;&#x4E24;&#x4E2A;&#x6982;&#x5FF5;&#x3002;</p>\n<h2 id="antd-transfer-api">antd Transfer API</h2>\n<p><a href="https://ant.design/components/transfer-cn/">&#x8BE6;&#x60C5;&#x8BF7;&#x70B9;&#x51FB;&#x67E5;&#x770B;&#x5B98;&#x65B9;</a></p>\n<table>\n<thead>\n<tr>\n<th>&#x53C2;&#x6570;</th>\n<th>&#x8BF4;&#x660E;</th>\n<th>&#x7C7B;&#x578B;</th>\n<th>&#x9ED8;&#x8BA4;&#x503C;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataSource</td>\n<td>&#x6570;&#x636E;&#x6E90;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5C06;&#x4F1A;&#x88AB;&#x6E32;&#x67D3;&#x5230;&#x5DE6;&#x8FB9;&#x4E00;&#x680F;&#x4E2D;&#xFF0C;<code>targetKeys</code> &#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x9664;&#x5916;&#x3002;</td>\n<td><a href="https://git.io/vMM64">TransferItem</a>[]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>render</td>\n<td>&#x6BCF;&#x884C;&#x6570;&#x636E;&#x6E32;&#x67D3;&#x51FD;&#x6570;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x5165;&#x53C2;&#x4E3A; <code>dataSource</code> &#x4E2D;&#x7684;&#x9879;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x4E3A; ReactElement</td>\n<td>Function(record)</td>\n<td></td>\n</tr>\n<tr>\n<td>targetKeys</td>\n<td>&#x663E;&#x793A;&#x5728;&#x53F3;&#x4FA7;&#x6846;&#x6570;&#x636E;&#x7684;key&#x96C6;&#x5408;</td>\n<td>string[]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>selectedKeys</td>\n<td>&#x8BBE;&#x7F6E;&#x54EA;&#x4E9B;&#x9879;&#x5E94;&#x8BE5;&#x88AB;&#x9009;&#x4E2D;</td>\n<td>string[]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>&#x9009;&#x9879;&#x5728;&#x4E24;&#x680F;&#x4E4B;&#x95F4;&#x8F6C;&#x79FB;&#x65F6;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;</td>\n<td>(targetKeys, direction, moveKeys): void</td>\n<td></td>\n</tr>\n<tr>\n<td>onSelectChange</td>\n<td>&#x9009;&#x4E2D;&#x9879;&#x53D1;&#x751F;&#x6539;&#x53D8;&#x65F6;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;</td>\n<td>(sourceSelectedKeys, targetSelectedKeys): void</td>\n<td></td>\n</tr>\n<tr>\n<td>onScroll</td>\n<td>&#x9009;&#x9879;&#x5217;&#x8868;&#x6EDA;&#x52A8;&#x65F6;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;</td>\n<td>(direction, event): void</td>\n<td></td>\n</tr>\n<tr>\n<td>listStyle</td>\n<td>&#x4E24;&#x4E2A;&#x7A7F;&#x68AD;&#x6846;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x6837;&#x5F0F;</td>\n<td>object</td>\n<td></td>\n</tr>\n<tr>\n<td>className</td>\n<td>&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>titles</td>\n<td>&#x6807;&#x9898;&#x96C6;&#x5408;,&#x987A;&#x5E8F;&#x4ECE;&#x5DE6;&#x81F3;&#x53F3;</td>\n<td>string[]</td>\n<td>[&apos;&apos;, &apos;&apos;]</td>\n</tr>\n<tr>\n<td>operations</td>\n<td>&#x64CD;&#x4F5C;&#x6587;&#x6848;&#x96C6;&#x5408;,&#x987A;&#x5E8F;&#x4ECE;&#x4E0A;&#x81F3;&#x4E0B;</td>\n<td>string[]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>showSearch</td>\n<td>&#x662F;&#x5426;&#x663E;&#x793A;&#x641C;&#x7D22;&#x6846;</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>filterOption</td>\n<td>&#x63A5;&#x6536; <code>inputValue</code> <code>option</code> &#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5F53; <code>option</code> &#x7B26;&#x5408;&#x7B5B;&#x9009;&#x6761;&#x4EF6;&#x65F6;&#xFF0C;&#x5E94;&#x8FD4;&#x56DE; <code>true</code>&#xFF0C;&#x53CD;&#x4E4B;&#x5219;&#x8FD4;&#x56DE; <code>false</code>&#x3002;</td>\n<td>(inputValue, option): boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>searchPlaceholder</td>\n<td>&#x641C;&#x7D22;&#x6846;&#x7684;&#x9ED8;&#x8BA4;&#x503C;</td>\n<td>string</td>\n<td>&apos;&#x8BF7;&#x8F93;&#x5165;&#x641C;&#x7D22;&#x5185;&#x5BB9;&apos;</td>\n</tr>\n<tr>\n<td>notFoundContent</td>\n<td>&#x5F53;&#x5217;&#x8868;&#x4E3A;&#x7A7A;&#x65F6;&#x663E;&#x793A;&#x7684;&#x5185;&#x5BB9;</td>\n<td>string or ReactNode</td>\n<td>&apos;&#x5217;&#x8868;&#x4E3A;&#x7A7A;&apos;</td>\n</tr>\n<tr>\n<td>footer</td>\n<td>&#x5E95;&#x90E8;&#x6E32;&#x67D3;&#x51FD;&#x6570;</td>\n<td>(props): ReactNode</td>\n<td></td>\n</tr>\n<tr>\n<td>lazy</td>\n<td>Transfer &#x4F7F;&#x7528;&#x4E86; <a href="https://github.com/loktar00/react-lazy-load">react-lazy-load</a> &#x4F18;&#x5316;&#x6027;&#x80FD;&#xFF0C;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x76F8;&#x5173;&#x53C2;&#x6570;</td>\n<td>object</td>\n<td><code>{ height: 32, offset: 32 }</code></td>\n</tr>\n<tr>\n<td>onSearchChange</td>\n<td>&#x641C;&#x7D22;&#x6846;&#x5185;&#x5BB9;&#x65F6;&#x6539;&#x53D8;&#x65F6;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;</td>\n<td>(direction: &apos;left&apos; or &apos;right&apos;, event: Event): void</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h2 id="-">&#x6CE8;&#x610F;</h2>\n<p>&#x6309;&#x7167; React &#x7684;<a href="http://facebook.github.io/react/docs/lists-and-keys.html#keys">&#x89C4;&#x8303;</a>&#xFF0C;&#x6240;&#x6709;&#x7684;&#x7EC4;&#x4EF6;&#x6570;&#x7EC4;&#x5FC5;&#x987B;&#x7ED1;&#x5B9A; key&#x3002;&#x5728; Transfer &#x4E2D;&#xFF0C;<code>dataSource</code>&#x91CC;&#x7684;&#x6570;&#x636E;&#x503C;&#x9700;&#x8981;&#x6307;&#x5B9A; <code>key</code> &#x503C;&#x3002;&#x5BF9;&#x4E8E; <code>dataSource</code> &#x9ED8;&#x8BA4;&#x5C06;&#x6BCF;&#x5217;&#x6570;&#x636E;&#x7684; <code>key</code> &#x5C5E;&#x6027;&#x4F5C;&#x4E3A;&#x552F;&#x4E00;&#x7684;&#x6807;&#x8BC6;&#x3002;</p>\n<p>&#x5982;&#x679C;&#x4F60;&#x7684;&#x6570;&#x636E;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#xFF0C;&#x52A1;&#x5FC5;&#x4F7F;&#x7528; <code>rowKey</code> &#x6765;&#x6307;&#x5B9A;&#x6570;&#x636E;&#x5217;&#x7684;&#x4E3B;&#x952E;&#x3002;</p>\n<pre class="hljs"><span class="hljs-comment">// &#x6BD4;&#x5982;&#x4F60;&#x7684;&#x6570;&#x636E;&#x4E3B;&#x952E;&#x662F; uid</span>\n<span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Transfer</span> <span class="hljs-attr">rowKey</span>=<span class="hljs-string">{record</span> =&gt;</span> record.uid} /&gt;;\n</span></pre>\n'}});